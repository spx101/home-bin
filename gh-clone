#!/bin/bash

dowork() {
    comm="git clone git@github.com:$1.git"
    #comm="gh repo clone $1"
    echo "Processing repo :: $comm"

    REPONAME=$(echo $1 | cut -d/ -f2)
    if [ -d $REPONAME ]; then
        (cd $REPONAME ; git pull)
        echo "ok"
    else
        echo "$comm"
        $comm
        if [ "$?" -ne "0" ]; then
            echo "retry $1"
            sleep 5
            $comm
        fi
    fi
    sleep 0.05
}
export -f dowork

CURRENT_DIR=$(basename "$PWD")
PARENT_DIR=$(basename "$(dirname "$PWD")")
NAMESPACE="$CURRENT_DIR"

if [ -f ".github.yaml" ]; then
    OWNER=$(cat .github.yaml | yq '.owner // ""')
    NAMESPACE=$(cat .github.yaml | yq '.namespace // ""')
    PREFIX=$(cat .github.yaml | yq '.prefix // ""')
    EXCLUDE=$(cat .github.yaml | yq '.exclude // ""')
fi

echo "Parent directory name: $PARENT_DIR"
echo "Current repository namespace: $NAMESPACE"
echo "Current repository prefix: $PREFIX"
echo "Repository owner: $OWNER"

if [ "$PARENT_DIR" != "gh" ] && [ -z "$OWNER" ]; then
    echo "Error: Directory name does not 'gh'"
    exit 1
fi

if [ ! -z $PREFIX ]; then
    GH_CLONE_ARGS="-n ${NAMESPACE} -f ${PREFIX}"
else
    GH_CLONE_ARGS="-n ${NAMESPACE}"
fi


if [ -z "$GITHUB_TOKEN_TOKEN" ]; then
    echo "Error: GITHUB_TOKEN_TOKEN is not set"
    echo "try: gh-login spx101"
    exit 1
fi

if [ -z "$OWNER" ]; then
    if [ ! -z "$EXCLUDE" ]; then
        EXCLUDE_ARGS="-e $EXCLUDE"
    fi
    echo "gh-repo-list -ojson $GH_CLONE_ARGS $EXCLUDE_ARGS"
    REPOS_LIST=$(gh-repo-list -ojson $GH_CLONE_ARGS $EXCLUDE_ARGS | jq -r '.[].full_name')
else
    echo "RUN: gh-repo-list -ojson $GH_CLONE_ARGS"
    REPOS_LIST=$(gh repo list --json name,owner --jq '.[] | "\(.owner.login)/\(.name)"')
fi

# echo $REPOS_LIST
# set -e
# for i in $REPOS_LIST; do
#     dowork $i
# done

parallel --jobs 1 dowork ::: "${REPOS_LIST[@]}"

# echo "Processing repos with awsp- prefix"
# REPOS_LIST=$(echo $REPOS | jq -r 'select(.nameWithOwner | startswith("Ringier-Axel-Springer-PL/awsp-")) | .nameWithOwner')
# parallel --jobs 4 dowork ::: "${REPOS_LIST[@]}"

# #~/.config/Code/User/globalStorage/alefragnani.project-manager/projects.json

# #[
# #    {
# #		"name": "sdk-lgtest-action1",
# #		"rootPath": "/home/lg/gh/sdk-lgtest-action1",
# #		"paths": [],
# #		"tags": ["lgtest"],
# #		"enabled": true
# #	},
